/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.4.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'com.bmuschko.docker-java-application'

buildscript {
    repositories { gradlePluginPortal() }
    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:7.4.0'
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    mavenLocal()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
def dockerImageTag = 'pkoperek/cloudsimplus-gateway:1.8.8'

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'org.cloudsimplus:cloudsim-plus:7.3.0'
    implementation group: 'net.sf.py4j', name: 'py4j', version: '0.10.9.5'
    implementation group: "ch.qos.logback", name: "logback-classic", version: "1.2.11"
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.3.6'
    implementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.github.stefanbirkner:system-lambda:1.2.1'
}

docker {
    url = 'unix:///var/run/docker.sock'
    javaApplication {
        baseImage = 'openjdk:17-jre'
        maintainer = 'Pawel Koperek "pkoperek@gmail.com"'
        ports = [25333]
        // tag = dockerImageTag
        jvmArgs = ['-Xms1G', '-Xmx4G']
    }
}

dockerCreateDockerfile {
    environmentVariable 'JAVA_OPTS', '-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/external'
}

mainClassName = "pl.edu.agh.csg.Main"
